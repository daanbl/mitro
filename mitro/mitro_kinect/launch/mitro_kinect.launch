<launch>

  <!-- "camera" should uniquely identify the device. All topics are pushed down
       into the "camera" namespace, and it is prepended to tf frame ids. -->
  <arg name="camera" default="kinect" />
  <arg name="rgb_frame_id"   default="/$(arg camera)_rgb_optical_frame" />
  <arg name="depth_frame_id" default="/$(arg camera)_depth_optical_frame" />

  <!-- device_id can have the following formats:
         "#1"              : Use first device found
         "2@3"             : Use device on USB bus 2, address 3
         "B00367707227042B": Use device with given serial number
    -->
  <arg name="device_id" default="#1" />

  <!-- By default, calibrations are stored to file://${ROS_HOME}/camera_info/${NAME}.yaml,
       where ${NAME} is of the form "[rgb|depth]_[serial#]", e.g. "depth_B00367707227042B".
       See camera_info_manager docs for calibration URL details. -->
  <arg name="rgb_camera_info_url"   default="file://$(find mitro_kinect)/calibration/rgb_1402240322.yaml" />
  <arg name="depth_camera_info_url" default="file://$(find mitro_kinect)/calibration/depth_1402240322.yaml" />

  <!-- Arguments for remapping "rgb", "depth", "depth_registered" namespaces -->
  <arg name="rgb"              default="rgb" />
  <arg name="ir"               default="ir" />
  <arg name="depth"            default="depth" />
  <arg name="depth_registered" default="depth_registered" />

  <!-- Optionally launch manager in GDB, for debugging -->
  <arg name="debug" default="false" />
  <arg if="$(arg debug)" name="launch_prefix" value="xterm -e gdb --args" />
  <arg unless="$(arg debug)" name="launch_prefix" value="" />
  <!-- Also globally disable bond heartbeat timeout in debug mode, so everything
       doesn't die when you hit a break point -->
  <param if="$(arg debug)" name="/bond_disable_heartbeat_timeout" value="true" />

  <!-- Nodelet manager, lives in top-level namespace -->
  <arg name="manager" value="$(arg camera)_nodelet_manager" />
  <node pkg="nodelet" type="nodelet" name="$(arg manager)" args="manager"
        output="screen" launch-prefix="$(arg launch_prefix)" />

  <!-- Push down all topics/nodelets into "camera" namespace -->
  <group ns="$(arg camera)">

    <!-- Driver nodelet -->
    <node pkg="nodelet" type="nodelet" name="driver"
	  args="load openni_camera/driver /$(arg manager)">
      <param name="device_id" value="$(arg device_id)" />
      <param name="rgb_camera_info_url"   value="$(arg rgb_camera_info_url)" />
      <param name="depth_camera_info_url" value="$(arg depth_camera_info_url)" />
      <param name="rgb_frame_id"   value="$(arg rgb_frame_id)" />
      <param name="depth_frame_id" value="$(arg depth_frame_id)" />
      <remap from="ir" to="$(arg ir)" /> 
      <remap from="rgb" to="$(arg rgb)" />
      <remap from="depth" to="$(arg depth)" />
      <remap from="depth_registered" to="$(arg depth_registered)" />
    </node>

    <arg name="rectify" default="true" />
    <arg name="points_xyz" default="true" />

    <!-- Rectified image -->
<!--
    <node pkg="nodelet" type="nodelet" name="rectify_ir"
	  args="load image_proc/rectify $(arg manager)" ns="$(arg ir)">
      <remap from="image_mono"  to="image_raw" />
    </node>
-->
    <group ns="$(arg depth)">

<!--
      <node if="$(arg rectify)" pkg="nodelet" type="nodelet" name="rectify_depth"
	    args="load image_proc/rectify /$(arg manager)">
	<remap from="image_mono"  to="image_raw" />
	<remap from="image_rect"  to="image_rect_raw" />
	<param name="interpolation" value="0" />
      </node>
-->
      <!-- Rectified depth image -->
<!--
      <node pkg="nodelet" type="nodelet" name="metric_rect"
	    args="load depth_image_proc/convert_metric /$(arg manager)">
	<remap from="image_raw" to="image_rect_raw" />
	<remap from="image"     to="image_rect" />
      </node>
-->

      <!-- Unrectified depth image -->
<!--
      <node pkg="nodelet" type="nodelet" name="metric"
	    args="load depth_image_proc/convert_metric /$(arg manager)"/>
-->

      <!-- Disparity image -->
<!--
      <node pkg="nodelet" type="nodelet" name="disparity"
	    args="load depth_image_proc/disparity /$(arg manager)">
	<remap from="image_rect_raw" to="image_raw" />
      </node>
-->
      <!-- XYZ point cloud (optional, disable if publishing XYZRGB instead) -->
      <node if="$(arg points_xyz)"
	    pkg="nodelet" type="nodelet" name="points"
	    args="load depth_image_proc/point_cloud_xyz /$(arg manager)">
	<remap from="image_rect" to="image_raw"/>  <!-- Use raw image for efficiency -->
      </node>

      <node pkg="nodelet" type="nodelet" name="mitro_kinect"
	    args="load mitro_kinect/MitroKinectNodelet /$(arg manager)">
      </node>

    </group>      

  </group> <!-- camera -->

<!--
  <node pkg="mitro_kinect" type="mitro_kinect" name="mitro_kinect">
    <remap from="cloud" to="/kinect/depth/points"/>
  </node>
-->

</launch>